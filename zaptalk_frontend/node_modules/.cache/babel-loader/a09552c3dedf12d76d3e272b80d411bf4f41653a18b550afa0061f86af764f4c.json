{"ast":null,"code":"var _jsxFileName = \"/workspace/zaptalk_frontend/zaptalk_frontend/src/components/MovieDetail/MovieDetail.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport api from '../../api/axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction MovieDetail() {\n  _s();\n  const [movie, setMovie] = useState(null);\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState('');\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [editingComment, setEditingComment] = useState(null);\n  const [editedContent, setEditedContent] = useState('');\n  const [currentUserProfile, setCurrentUserProfile] = useState(null);\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    setIsLoggedIn(!!token);\n    const fetchMovieAndComments = async () => {\n      setIsLoading(true);\n      try {\n        const movieResponse = await api.get(`movies/${id}/`);\n        setMovie(movieResponse.data);\n        if (token) {\n          const commentsResponse = await api.get('comments/', {\n            params: {\n              movie: id\n            },\n            headers: {\n              'Authorization': `Bearer ${token}`\n            }\n          });\n          setComments(commentsResponse.data);\n          console.log('Comments:', commentsResponse.data);\n          const profilesResponse = await api.get('profiles/', {\n            headers: {\n              'Authorization': `Bearer ${token}`\n            }\n          });\n          console.log('Profiles response:', profilesResponse.data);\n          setCurrentUserProfile(profilesResponse.data[0]);\n          const currentUserResponse = await api.get('profiles/me/', {\n            headers: {\n              'Authorization': `Bearer ${token}`\n            }\n          });\n          console.log('Current user profile:', currentUserResponse.data);\n          setCurrentUserProfile(currentUserResponse.data);\n        }\n      } catch (error) {\n        console.error('Error fetching movie details and comments:', error.response || error);\n        setError('Failed to fetch movie details');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMovieAndComments();\n  }, [id]);\n  const handleLike = async () => {\n    if (!isLoggedIn) {\n      setError('Please log in to like the movie');\n      return;\n    }\n    try {\n      const response = await api.post(`likes/toggle_like/`, {\n        content_type: 'movie',\n        object_id: id\n      }, {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      setMovie(prevMovie => ({\n        ...prevMovie,\n        likes_count: response.data.likes_count\n      }));\n    } catch (error) {\n      console.error('Error liking movie:', error);\n      setError('Failed to like the movie. Please try again.');\n    }\n  };\n  const handleCommentSubmit = async e => {\n    e.preventDefault();\n    const token = localStorage.getItem('token');\n    if (!token) {\n      setError('You must be logged in to post a comment.');\n      return;\n    }\n    try {\n      const response = await api.post('comments/', {\n        movie: id,\n        content: newComment\n      }, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.status === 201) {\n        setComments(prevComments => [...prevComments, response.data]);\n        setNewComment('');\n        setError(null);\n      } else {\n        throw new Error('Unexpected response status');\n      }\n    } catch (error) {\n      console.error('Error posting comment:', error);\n      if (error.response) {\n        console.error('Response data:', error.response.data);\n        console.error('Response status:', error.response.status);\n        setError(`Failed to post comment: ${error.response.data.message || 'Unknown error'}`);\n      } else if (error.request) {\n        setError('No response received from server. Please try again.');\n      } else {\n        setError('Error setting up the request. Please try again.');\n      }\n    }\n  };\n  const handleEditComment = comment => {\n    setEditingComment(comment);\n    setEditedContent(comment.content);\n  };\n  const handleUpdateComment = async () => {\n    try {\n      const response = await api.put(`comments/${editingComment.id}/`, {\n        content: editedContent\n      }, {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.status === 200) {\n        setComments(prevComments => prevComments.map(c => c.id === editingComment.id ? {\n          ...c,\n          content: editedContent\n        } : c));\n        setEditingComment(null);\n        setEditedContent('');\n        setError(null);\n      } else {\n        throw new Error('Unexpected response status');\n      }\n    } catch (error) {\n      console.error('Error updating comment:', error);\n      setError('Failed to update comment. Please try again.');\n    }\n  };\n  const handleDeleteComment = async commentId => {\n    try {\n      const response = await api.delete(`comments/${commentId}/`, {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      if (response.status === 204) {\n        setComments(prevComments => prevComments.filter(c => c.id !== commentId));\n        setError(null);\n      } else {\n        throw new Error('Unexpected response status');\n      }\n    } catch (error) {\n      console.error('Error deleting comment:', error);\n      setError('Failed to delete comment. Please try again.');\n    }\n  };\n  const handleLikeComment = async commentId => {\n    try {\n      const response = await api.post('likes/toggle_like/', {\n        content_type: 'comment',\n        object_id: commentId\n      }, {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      if (response.status === 200) {\n        setComments(prevComments => prevComments.map(comment => comment.id === commentId ? {\n          ...comment,\n          likes_count: response.data.likes_count,\n          is_liked_by_user: response.data.is_liked\n        } : comment));\n      }\n    } catch (error) {\n      console.error('Error toggling like:', error);\n      setError('Failed to like/unlike comment. Please try again.');\n    }\n  };\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 204,\n    columnNumber: 25\n  }, this);\n  if (!movie) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Movie not found\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 205,\n    columnNumber: 22\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-detail\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: movie.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: movie.thumbnail,\n      alt: movie.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Year: \", movie.year]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Genres: \", movie.genres.join(', ')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Likes: \", movie.likes_count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLike,\n      children: \"Like\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: movie.extract\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), isLoggedIn ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [comments.length > 0 ? comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment\",\n          children: editingComment && editingComment.id === comment.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: editedContent,\n              onChange: e => setEditedContent(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleUpdateComment,\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setEditingComment(null),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 21\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: comment.user.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 26\n              }, this), \": \", comment.content]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              children: [\"Posted on: \", new Date(comment.created_at).toLocaleString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [currentUserProfile && currentUserProfile.username !== comment.user.username && /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleLikeComment(comment.id),\n                children: comment.is_liked_by_user ? 'Unlike' : 'Like'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\" \", comment.likes_count, \" likes\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 23\n            }, this), console.log('Rendering comment:', comment), console.log('Current user profile in render:', currentUserProfile), console.log('Is current user the comment author?', (currentUserProfile === null || currentUserProfile === void 0 ? void 0 : currentUserProfile.username) === comment.user.username), currentUserProfile && currentUserProfile.username === comment.user.username && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleEditComment(comment),\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDeleteComment(comment.id),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 27\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true)\n        }, comment.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 17\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No comments yet.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleCommentSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: newComment,\n            onChange: e => setNewComment(e.target.value),\n            placeholder: \"Write a comment...\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Post Comment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please log in to view and post comments.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 208,\n    columnNumber: 5\n  }, this);\n}\n_s(MovieDetail, \"KJT6249zsOAkZSrOY5i0EA4C4u8=\", false, function () {\n  return [useParams];\n});\n_c = MovieDetail;\nexport default MovieDetail;\nvar _c;\n$RefreshReg$(_c, \"MovieDetail\");","map":{"version":3,"names":["React","useState","useEffect","useParams","api","jsxDEV","_jsxDEV","Fragment","_Fragment","MovieDetail","_s","movie","setMovie","comments","setComments","newComment","setNewComment","error","setError","isLoading","setIsLoading","isLoggedIn","setIsLoggedIn","editingComment","setEditingComment","editedContent","setEditedContent","currentUserProfile","setCurrentUserProfile","id","token","localStorage","getItem","fetchMovieAndComments","movieResponse","get","data","commentsResponse","params","headers","console","log","profilesResponse","currentUserResponse","response","handleLike","post","content_type","object_id","prevMovie","likes_count","handleCommentSubmit","e","preventDefault","content","status","prevComments","Error","message","request","handleEditComment","comment","handleUpdateComment","put","map","c","handleDeleteComment","commentId","delete","filter","handleLikeComment","is_liked_by_user","is_liked","children","fileName","_jsxFileName","lineNumber","columnNumber","className","title","src","thumbnail","alt","year","genres","join","onClick","extract","length","value","onChange","target","user","username","Date","created_at","toLocaleString","onSubmit","placeholder","required","type","_c","$RefreshReg$"],"sources":["/workspace/zaptalk_frontend/zaptalk_frontend/src/components/MovieDetail/MovieDetail.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport api from '../../api/axios';\n\nfunction MovieDetail() {\n  const [movie, setMovie] = useState(null);\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState('');\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [editingComment, setEditingComment] = useState(null);\n  const [editedContent, setEditedContent] = useState('');\n  const [currentUserProfile, setCurrentUserProfile] = useState(null);\n  const { id } = useParams();\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    setIsLoggedIn(!!token);\n\n    const fetchMovieAndComments = async () => {\n      setIsLoading(true);\n      try {\n        const movieResponse = await api.get(`movies/${id}/`);\n        setMovie(movieResponse.data);\n\n        if (token) {\n          const commentsResponse = await api.get('comments/', { \n            params: { movie: id },\n            headers: { 'Authorization': `Bearer ${token}` }\n          });\n          setComments(commentsResponse.data);\n          console.log('Comments:', commentsResponse.data);\n\n          const profilesResponse = await api.get('profiles/', {\n            headers: { 'Authorization': `Bearer ${token}` }\n          });\n          console.log('Profiles response:', profilesResponse.data);\n          setCurrentUserProfile(profilesResponse.data[0]);\n          \n          const currentUserResponse = await api.get('profiles/me/', {\n            headers: { 'Authorization': `Bearer ${token}` }\n          });\n          console.log('Current user profile:', currentUserResponse.data);\n          setCurrentUserProfile(currentUserResponse.data);\n        }\n      } catch (error) {\n        console.error('Error fetching movie details and comments:', error.response || error);\n        setError('Failed to fetch movie details');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchMovieAndComments();\n  }, [id]);\n\n  const handleLike = async () => {\n    if (!isLoggedIn) {\n      setError('Please log in to like the movie');\n      return;\n    }\n    try {\n      const response = await api.post(`likes/toggle_like/`, {\n        content_type: 'movie',\n        object_id: id\n      }, {\n        headers: { 'Authorization': `Bearer ${localStorage.getItem('token')}` }\n      });\n      setMovie(prevMovie => ({\n        ...prevMovie,\n        likes_count: response.data.likes_count\n      }));\n    } catch (error) {\n      console.error('Error liking movie:', error);\n      setError('Failed to like the movie. Please try again.');\n    }\n  };\n\n  const handleCommentSubmit = async (e) => {\n    e.preventDefault();\n    const token = localStorage.getItem('token');\n    if (!token) {\n      setError('You must be logged in to post a comment.');\n      return;\n    }\n    \n    try {\n      const response = await api.post('comments/', {\n        movie: id,\n        content: newComment\n      }, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      \n      if (response.status === 201) {\n        setComments(prevComments => [...prevComments, response.data]);\n        setNewComment('');\n        setError(null);\n      } else {\n        throw new Error('Unexpected response status');\n      }\n    } catch (error) {\n      console.error('Error posting comment:', error);\n      if (error.response) {\n        console.error('Response data:', error.response.data);\n        console.error('Response status:', error.response.status);\n        setError(`Failed to post comment: ${error.response.data.message || 'Unknown error'}`);\n      } else if (error.request) {\n        setError('No response received from server. Please try again.');\n      } else {\n        setError('Error setting up the request. Please try again.');\n      }\n    }\n  };\n  \n  const handleEditComment = (comment) => {\n    setEditingComment(comment);\n    setEditedContent(comment.content);\n  };\n\n  const handleUpdateComment = async () => {\n    try {\n      const response = await api.put(`comments/${editingComment.id}/`, {\n        content: editedContent\n      }, {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`,\n          'Content-Type': 'application/json'\n        }\n      });\n\n      if (response.status === 200) {\n        setComments(prevComments =>\n          prevComments.map(c =>\n            c.id === editingComment.id ? { ...c, content: editedContent } : c\n          )\n        );\n        setEditingComment(null);\n        setEditedContent('');\n        setError(null);\n      } else {\n        throw new Error('Unexpected response status');\n      }\n    } catch (error) {\n      console.error('Error updating comment:', error);\n      setError('Failed to update comment. Please try again.');\n    }\n  };\n\n  const handleDeleteComment = async (commentId) => {\n    try {\n      const response = await api.delete(`comments/${commentId}/`, {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n\n      if (response.status === 204) {\n        setComments(prevComments => prevComments.filter(c => c.id !== commentId));\n        setError(null);\n      } else {\n        throw new Error('Unexpected response status');\n      }\n    } catch (error) {\n      console.error('Error deleting comment:', error);\n      setError('Failed to delete comment. Please try again.');\n    }\n  };\n\n  const handleLikeComment = async (commentId) => {\n    try {\n      const response = await api.post('likes/toggle_like/', {\n        content_type: 'comment',\n        object_id: commentId\n      }, {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n\n      if (response.status === 200) {\n        setComments(prevComments =>\n          prevComments.map(comment =>\n            comment.id === commentId\n              ? {\n                  ...comment,\n                  likes_count: response.data.likes_count,\n                  is_liked_by_user: response.data.is_liked\n                }\n              : comment\n          )\n        );\n      }\n    } catch (error) {\n      console.error('Error toggling like:', error);\n      setError('Failed to like/unlike comment. Please try again.');\n    }\n  };\n\n  if (isLoading) return <div>Loading...</div>;\n  if (!movie) return <div>Movie not found</div>;\n\n  return (\n    <div className=\"movie-detail\">\n      <h1>{movie.title}</h1>\n      <img src={movie.thumbnail} alt={movie.title} />\n      <p>Year: {movie.year}</p>\n      <p>Genres: {movie.genres.join(', ')}</p>\n      <p>Likes: {movie.likes_count}</p>\n      <button onClick={handleLike}>Like</button>\n      <p>{movie.extract}</p>\n\n      <div className=\"comments-section\">\n        <h2>Comments</h2>\n        {isLoggedIn ? (\n          <>\n            {comments.length > 0 ? (\n              comments.map(comment => (\n                <div key={comment.id} className=\"comment\">\n                  {/* NEW: Add edit functionality */}\n                  {editingComment && editingComment.id === comment.id ? (\n                    <div>\n                      <textarea\n                        value={editedContent}\n                        onChange={(e) => setEditedContent(e.target.value)}\n                      />\n                      <button onClick={handleUpdateComment}>Save</button>\n                      <button onClick={() => setEditingComment(null)}>Cancel</button>\n                    </div>\n                  ) : (\n                    <>\n                      \n                      <p><strong>{comment.user.username}</strong>: {comment.content}</p>\n                      <small>Posted on: {new Date(comment.created_at).toLocaleString()}</small>\n                      <div>\n                        {currentUserProfile && currentUserProfile.username !== comment.user.username && (\n                          <button onClick={() => handleLikeComment(comment.id)}>\n                            {comment.is_liked_by_user ? 'Unlike' : 'Like'}\n                          </button>\n                        )}\n                        <span> {comment.likes_count} likes</span>\n                      </div>\n                      {/* NEW: Add edit and delete buttons for user's own comments */}\n                      {console.log('Rendering comment:', comment)}\n                      {console.log('Current user profile in render:', currentUserProfile)}\n                      {console.log('Is current user the comment author?', currentUserProfile?.username === comment.user.username)}\n                      {currentUserProfile && currentUserProfile.username === comment.user.username && (\n                        <div>\n                          <button onClick={() => handleEditComment(comment)}>Edit</button>\n                          <button onClick={() => handleDeleteComment(comment.id)}>Delete</button>\n                        </div>\n                      )}\n                    </>\n                  )}\n                </div>\n              ))\n            ) : (\n              <p>No comments yet.</p>\n            )}\n\n            <form onSubmit={handleCommentSubmit}>\n              <textarea\n                value={newComment}\n                onChange={(e) => setNewComment(e.target.value)}\n                placeholder=\"Write a comment...\"\n                required\n              />\n              <button type=\"submit\">Post Comment</button>\n            </form>\n          </>\n        ) : (\n          <p>Please log in to view and post comments.</p>\n        )}\n      </div>\n      {error && <div className=\"error-message\">{error}</div>}\n    </div>\n  );\n}\n\nexport default MovieDetail;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}