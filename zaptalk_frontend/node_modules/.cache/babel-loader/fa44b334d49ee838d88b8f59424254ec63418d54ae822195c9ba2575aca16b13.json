{"ast":null,"code":"var _jsxFileName = \"/workspace/zaptalk_frontend/zaptalk_frontend/src/components/MovieDetail/MovieDetail.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport api from '../../api/axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MovieDetail() {\n  _s();\n  const [movie, setMovie] = useState(null);\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState('');\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    const fetchMovieAndComments = async () => {\n      setIsLoading(true);\n      try {\n        const [movieResponse, commentsResponse] = await Promise.all([api.get(`movies/${id}/`), api.get('comments/', {\n          params: {\n            movie: id\n          }\n        })]);\n        setMovie(movieResponse.data);\n        setComments(commentsResponse.data);\n      } catch (error) {\n        console.error('Error fetching movie details and comments:', error.response || error);\n        setError('Failed to fetch movie details and comments');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMovieAndComments();\n  }, [id]);\n  const handleCommentSubmit = async e => {\n    e.preventDefault();\n    try {\n      console.log('Attempting to post comment to:', `${api.defaults.baseURL}comments/`);\n      console.log('Comment data:', {\n        movie: id,\n        content: newComment\n      });\n      const response = await api.post('comments/', {\n        movie: id,\n        content: newComment\n      });\n      console.log('Comment posted successfully:', response.data);\n      setComments([...comments, response.data]);\n      setNewComment('');\n    } catch (error) {\n      console.error('Error posting comment:', error);\n      if (error.response) {\n        // The request was made and the server responded with a status code\n        // that falls out of the range of 2xx\n        console.error('Error response data:', error.response.data);\n        console.error('Error response status:', error.response.status);\n        console.error('Error response headers:', error.response.headers);\n      } else if (error.request) {\n        // The request was made but no response was received\n        console.error('Error request:', error.request);\n      } else {\n        // Something happened in setting up the request that triggered an Error\n        console.error('Error message:', error.message);\n      }\n      setError('Failed to post comment. Please try again.');\n    }\n  };\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 21\n  }, this);\n  if (!movie) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Movie not found\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 22\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-detail\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: movie.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: movie.thumbnail,\n      alt: movie.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Year: \", movie.year]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Genres: \", movie.genres.join(', ')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Likes: \", movie.likes_count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {/* Add your like functionality here */},\n      children: \"Like\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: movie.extract\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), comments.length > 0 ? comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: comment.user.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 18\n          }, this), \": \", comment.content]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: [\"Posted on: \", new Date(comment.created_at).toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }, this)]\n      }, comment.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No comments yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleCommentSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: newComment,\n          onChange: e => setNewComment(e.target.value),\n          placeholder: \"Write a comment...\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Post Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(MovieDetail, \"9uL3MAsi6k2JlUphGUg+ohrl6Fw=\", false, function () {\n  return [useParams];\n});\n_c = MovieDetail;\nexport default MovieDetail;\nvar _c;\n$RefreshReg$(_c, \"MovieDetail\");","map":{"version":3,"names":["React","useState","useEffect","useParams","api","jsxDEV","_jsxDEV","MovieDetail","_s","movie","setMovie","comments","setComments","newComment","setNewComment","error","setError","isLoading","setIsLoading","id","fetchMovieAndComments","movieResponse","commentsResponse","Promise","all","get","params","data","console","response","handleCommentSubmit","e","preventDefault","log","defaults","baseURL","content","post","status","headers","request","message","children","fileName","_jsxFileName","lineNumber","columnNumber","className","title","src","thumbnail","alt","year","genres","join","likes_count","onClick","extract","length","map","comment","user","username","Date","created_at","toLocaleString","onSubmit","value","onChange","target","placeholder","required","type","_c","$RefreshReg$"],"sources":["/workspace/zaptalk_frontend/zaptalk_frontend/src/components/MovieDetail/MovieDetail.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport api from '../../api/axios';\n\nfunction MovieDetail() {\n  const [movie, setMovie] = useState(null);\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState('');\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const { id } = useParams();\n\n  useEffect(() => {\n    const fetchMovieAndComments = async () => {\n      setIsLoading(true);\n      try {\n        const [movieResponse, commentsResponse] = await Promise.all([\n          api.get(`movies/${id}/`),\n          api.get('comments/', { params: { movie: id } })\n        ]);\n        setMovie(movieResponse.data);\n        setComments(commentsResponse.data);\n      } catch (error) {\n        console.error('Error fetching movie details and comments:', error.response || error);\n        setError('Failed to fetch movie details and comments');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchMovieAndComments();\n  }, [id]);\n\n  const handleCommentSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      console.log('Attempting to post comment to:', `${api.defaults.baseURL}comments/`);\n      console.log('Comment data:', { movie: id, content: newComment });\n      const response = await api.post('comments/', {\n        movie: id,\n        content: newComment\n      });\n      console.log('Comment posted successfully:', response.data);\n      setComments([...comments, response.data]);\n      setNewComment('');\n    } catch (error) {\n      console.error('Error posting comment:', error);\n      if (error.response) {\n        // The request was made and the server responded with a status code\n        // that falls out of the range of 2xx\n        console.error('Error response data:', error.response.data);\n        console.error('Error response status:', error.response.status);\n        console.error('Error response headers:', error.response.headers);\n      } else if (error.request) {\n        // The request was made but no response was received\n        console.error('Error request:', error.request);\n      } else {\n        // Something happened in setting up the request that triggered an Error\n        console.error('Error message:', error.message);\n      }\n      setError('Failed to post comment. Please try again.');\n    }\n  };\n\n  if (isLoading) return <div>Loading...</div>;\n  if (error) return <div>Error: {error}</div>;\n  if (!movie) return <div>Movie not found</div>;\n\n  return (\n    <div className=\"movie-detail\">\n      <h1>{movie.title}</h1>\n      <img src={movie.thumbnail} alt={movie.title} />\n      <p>Year: {movie.year}</p>\n      <p>Genres: {movie.genres.join(', ')}</p>\n      <p>Likes: {movie.likes_count}</p>\n      <button onClick={() => {/* Add your like functionality here */}}>Like</button>\n      <p>{movie.extract}</p>\n\n      <div className=\"comments-section\">\n        <h2>Comments</h2>\n        {comments.length > 0 ? (\n          comments.map(comment => (\n            <div key={comment.id} className=\"comment\">\n              <p><strong>{comment.user.username}</strong>: {comment.content}</p>\n              <small>Posted on: {new Date(comment.created_at).toLocaleString()}</small>\n            </div>\n          ))\n        ) : (\n          <p>No comments yet.</p>\n        )}\n\n        <form onSubmit={handleCommentSubmit}>\n          <textarea\n            value={newComment}\n            onChange={(e) => setNewComment(e.target.value)}\n            placeholder=\"Write a comment...\"\n            required\n          />\n          <button type=\"submit\">Post Comment</button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default MovieDetail;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}