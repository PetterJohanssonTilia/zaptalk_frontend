{"ast":null,"code":"var _jsxFileName = \"/workspace/zaptalk_frontend/zaptalk_frontend/src/components/UserRegistration/UserRegistration.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport api from '../api/axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Registration() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password1, setPassword1] = useState('');\n  const [password2, setPassword2] = useState('');\n  const [error, setError] = useState(null);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await api.post('api/auth/registration/', {\n        username,\n        email,\n        password1,\n        password2\n      });\n      console.log('User registered:', response.data);\n\n      // After successful registration, obtain JWT tokens\n      const tokenResponse = await api.post('api/token/', {\n        username,\n        password: password1\n      });\n\n      // Store the tokens in localStorage or your preferred storage method\n      localStorage.setItem('access_token', tokenResponse.data.access);\n      localStorage.setItem('refresh_token', tokenResponse.data.refresh);\n\n      // Redirect to home page or user dashboard\n      // history.push('/');\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError('Registration failed: ' + (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.detail) || err.message));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(Registration, \"2+RKvc4kbP7IxoTbT57K+inAFDI=\");\n_c = Registration;\nexport default Registration;\nvar _c;\n$RefreshReg$(_c, \"Registration\");","map":{"version":3,"names":["React","useState","api","jsxDEV","_jsxDEV","Registration","_s","username","setUsername","email","setEmail","password1","setPassword1","password2","setPassword2","error","setError","handleSubmit","e","preventDefault","response","post","console","log","data","tokenResponse","password","localStorage","setItem","access","refresh","err","_err$response","_err$response$data","detail","message","onSubmit","children","type","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/workspace/zaptalk_frontend/zaptalk_frontend/src/components/UserRegistration/UserRegistration.js"],"sourcesContent":["import React, { useState } from 'react';\nimport api from '../api/axios';\n\nfunction Registration() {\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password1, setPassword1] = useState('');\n  const [password2, setPassword2] = useState('');\n  const [error, setError] = useState(null);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await api.post('api/auth/registration/', { \n        username, \n        email, \n        password1, \n        password2 \n      });\n      console.log('User registered:', response.data);\n      \n      // After successful registration, obtain JWT tokens\n      const tokenResponse = await api.post('api/token/', {\n        username,\n        password: password1\n      });\n      \n      // Store the tokens in localStorage or your preferred storage method\n      localStorage.setItem('access_token', tokenResponse.data.access);\n      localStorage.setItem('refresh_token', tokenResponse.data.refresh);\n      \n      // Redirect to home page or user dashboard\n      // history.push('/');\n    } catch (err) {\n      setError('Registration failed: ' + (err.response?.data?.detail || err.message));\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      {/* Add your form fields here */}\n      <button type=\"submit\">Register</button>\n      {error && <p>{error}</p>}\n    </form>\n  );\n}\n\nexport default Registration;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,GAAG,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMgB,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMlB,GAAG,CAACmB,IAAI,CAAC,wBAAwB,EAAE;QACxDd,QAAQ;QACRE,KAAK;QACLE,SAAS;QACTE;MACF,CAAC,CAAC;MACFS,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEH,QAAQ,CAACI,IAAI,CAAC;;MAE9C;MACA,MAAMC,aAAa,GAAG,MAAMvB,GAAG,CAACmB,IAAI,CAAC,YAAY,EAAE;QACjDd,QAAQ;QACRmB,QAAQ,EAAEf;MACZ,CAAC,CAAC;;MAEF;MACAgB,YAAY,CAACC,OAAO,CAAC,cAAc,EAAEH,aAAa,CAACD,IAAI,CAACK,MAAM,CAAC;MAC/DF,YAAY,CAACC,OAAO,CAAC,eAAe,EAAEH,aAAa,CAACD,IAAI,CAACM,OAAO,CAAC;;MAEjE;MACA;IACF,CAAC,CAAC,OAAOC,GAAG,EAAE;MAAA,IAAAC,aAAA,EAAAC,kBAAA;MACZjB,QAAQ,CAAC,uBAAuB,IAAI,EAAAgB,aAAA,GAAAD,GAAG,CAACX,QAAQ,cAAAY,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAcR,IAAI,cAAAS,kBAAA,uBAAlBA,kBAAA,CAAoBC,MAAM,KAAIH,GAAG,CAACI,OAAO,CAAC,CAAC;IACjF;EACF,CAAC;EAED,oBACE/B,OAAA;IAAMgC,QAAQ,EAAEnB,YAAa;IAAAoB,QAAA,gBAE3BjC,OAAA;MAAQkC,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAQ;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACtC3B,KAAK,iBAAIX,OAAA;MAAAiC,QAAA,EAAItB;IAAK;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpB,CAAC;AAEX;AAACpC,EAAA,CA1CQD,YAAY;AAAAsC,EAAA,GAAZtC,YAAY;AA4CrB,eAAeA,YAAY;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}