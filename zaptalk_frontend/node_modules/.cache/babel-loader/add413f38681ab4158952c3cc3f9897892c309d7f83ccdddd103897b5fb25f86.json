{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: 'https://zaptalk-api-c46804cb19e0.herokuapp.com/api/'\n});\napi.interceptors.request.use(config => {\n  // Only add the Authorization header for endpoints that require authentication\n  if (config.url !== 'movies/') {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers['Authorization'] = `Bearer ${token}`;\n    }\n  }\n  return config;\n}, error => Promise.reject(error));\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","interceptors","request","use","config","url","token","localStorage","getItem","headers","error","Promise","reject"],"sources":["/workspace/zaptalk_frontend/zaptalk_frontend/src/api/axios.js"],"sourcesContent":["import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'https://zaptalk-api-c46804cb19e0.herokuapp.com/api/'\n});\n\napi.interceptors.request.use(\n  (config) => {\n    // Only add the Authorization header for endpoints that require authentication\n    if (config.url !== 'movies/') {\n      const token = localStorage.getItem('token');\n      if (token) {\n        config.headers['Authorization'] = `Bearer ${token}`;\n      }\n    }\n    return config;\n  },\n  (error) => Promise.reject(error)\n);\n\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE;AACX,CAAC,CAAC;AAEFF,GAAG,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV;EACA,IAAIA,MAAM,CAACC,GAAG,KAAK,SAAS,EAAE;IAC5B,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAIF,KAAK,EAAE;MACTF,MAAM,CAACK,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUH,KAAK,EAAE;IACrD;EACF;EACA,OAAOF,MAAM;AACf,CAAC,EACAM,KAAK,IAAKC,OAAO,CAACC,MAAM,CAACF,KAAK,CACjC,CAAC;AAED,eAAeZ,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}