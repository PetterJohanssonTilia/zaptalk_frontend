{"ast":null,"code":"var _jsxFileName = \"/workspace/zaptalk_frontend/zaptalk_frontend/src/components/MovieDetail/MovieDetail.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport api from '../../api/axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DEFAULT_AVATAR = 'https://res.cloudinary.com/dumvsoykz/image/upload/v1724754182/default_profile_yvdjcm.jpg';\nfunction MovieDetail() {\n  _s();\n  const [movie, setMovie] = useState(null);\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState('');\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [editingComment, setEditingComment] = useState(null);\n  const [editedContent, setEditedContent] = useState('');\n  const [currentUserProfile, setCurrentUserProfile] = useState(null);\n  const {\n    id\n  } = useParams();\n  const [userIdMapping, setUserIdMapping] = useState({});\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    setIsLoggedIn(!!token);\n    const fetchMovieAndComments = async () => {\n      setIsLoading(true);\n      try {\n        const movieResponse = await api.get(`movies/${id}/`);\n        setMovie(movieResponse.data);\n        if (token) {\n          const commentsResponse = await api.get('comments/', {\n            params: {\n              movie: id\n            },\n            headers: {\n              'Authorization': `Bearer ${token}`\n            }\n          });\n          setComments(commentsResponse.data);\n          console.log('Comments:', commentsResponse.data);\n          const profilesResponse = await api.get('profiles/', {\n            headers: {\n              'Authorization': `Bearer ${token}`\n            }\n          });\n          console.log('Profiles response:', profilesResponse.data);\n          setCurrentUserProfile(profilesResponse.data[0]);\n          const currentUserResponse = await api.get('profiles/me/', {\n            headers: {\n              'Authorization': `Bearer ${token}`\n            }\n          });\n          console.log('Current user profile:', currentUserResponse.data);\n          setCurrentUserProfile(currentUserResponse.data);\n        }\n      } catch (error) {\n        console.error('Error fetching movie details and comments:', error.response || error);\n        setError('Failed to fetch movie details');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMovieAndComments();\n  }, [id]);\n  const handleLike = async () => {\n    if (!isLoggedIn) {\n      setError('Please log in to like the movie');\n      return;\n    }\n    try {\n      const response = await api.post(`likes/toggle_like/`, {\n        content_type: 'movie',\n        object_id: id\n      }, {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      setMovie(prevMovie => ({\n        ...prevMovie,\n        likes_count: response.data.likes_count\n      }));\n    } catch (error) {\n      console.error('Error liking movie:', error);\n      setError('Failed to like the movie. Please try again.');\n    }\n  };\n  const handleCommentSubmit = async e => {\n    e.preventDefault();\n    const token = localStorage.getItem('token');\n    if (!token) {\n      setError('You must be logged in to post a comment.');\n      return;\n    }\n    try {\n      const response = await api.post('comments/', {\n        movie: id,\n        content: newComment\n      }, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.status === 201) {\n        setComments(prevComments => [...prevComments, response.data]);\n        setNewComment('');\n        setError(null);\n      } else {\n        throw new Error('Unexpected response status');\n      }\n    } catch (error) {\n      console.error('Error posting comment:', error);\n      if (error.response) {\n        console.error('Response data:', error.response.data);\n        console.error('Response status:', error.response.status);\n        setError(`Failed to post comment: ${error.response.data.message || 'Unknown error'}`);\n      } else if (error.request) {\n        setError('No response received from server. Please try again.');\n      } else {\n        setError('Error setting up the request. Please try again.');\n      }\n    }\n  };\n  const handleEditComment = comment => {\n    setEditingComment(comment);\n    setEditedContent(comment.content);\n  };\n  const handleUpdateComment = async () => {\n    try {\n      const response = await api.put(`comments/${editingComment.id}/`, {\n        content: editedContent\n      }, {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.status === 200) {\n        setComments(prevComments => prevComments.map(c => c.id === editingComment.id ? {\n          ...c,\n          content: editedContent\n        } : c));\n        setEditingComment(null);\n        setEditedContent('');\n        setError(null);\n      } else {\n        throw new Error('Unexpected response status');\n      }\n    } catch (error) {\n      console.error('Error updating comment:', error);\n      setError('Failed to update comment. Please try again.');\n    }\n  };\n  const handleDeleteComment = async commentId => {\n    try {\n      const response = await api.delete(`comments/${commentId}/`, {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      if (response.status === 204) {\n        setComments(prevComments => prevComments.filter(c => c.id !== commentId));\n        setError(null);\n      } else {\n        throw new Error('Unexpected response status');\n      }\n    } catch (error) {\n      console.error('Error deleting comment:', error);\n      setError('Failed to delete comment. Please try again.');\n    }\n  };\n  const handleLikeComment = async commentId => {\n    try {\n      const response = await api.post('likes/toggle_like/', {\n        content_type: 'comment',\n        object_id: commentId\n      }, {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      if (response.status === 200) {\n        setComments(prevComments => prevComments.map(comment => comment.id === commentId ? {\n          ...comment,\n          likes_count: response.data.likes_count,\n          is_liked_by_user: response.data.is_liked\n        } : comment));\n      }\n    } catch (error) {\n      console.error('Error toggling like:', error);\n      setError('Failed to like/unlike comment. Please try again.');\n    }\n  };\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 207,\n    columnNumber: 25\n  }, this);\n  if (!movie) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Movie not found\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 208,\n    columnNumber: 22\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-detail\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: movie.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: movie.thumbnail,\n      alt: movie.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Year: \", movie.year]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Genres: \", movie.genres.join(', ')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Likes: \", movie.likes_count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLike,\n      children: \"Like\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: movie.extract\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 7\n      }, this), isLoggedIn ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [comments.length > 0 ? comments.map(comment => {\n          const correctProfileId = userIdMapping[comment.user.username.toLowerCase()] || comment.user.id;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment\",\n            children: editingComment && editingComment.id === comment.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                value: editedContent,\n                onChange: e => setEditedContent(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleUpdateComment,\n                children: \"Save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setEditingComment(null),\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 23\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Link, {\n                to: `/profile/${correctProfileId}`,\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: comment.user.avatar || DEFAULT_AVATAR,\n                  alt: `${comment.user.username}'s avatar`,\n                  className: \"w-12 h-12 rounded-full object-cover comment-avatar\",\n                  onError: e => {\n                    var _comment$user;\n                    console.error(`Error loading avatar for ${(_comment$user = comment.user) === null || _comment$user === void 0 ? void 0 : _comment$user.username}:`, e);\n                    e.target.src = DEFAULT_AVATAR;\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: `/profile/${correctProfileId}`,\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: comment.user.username\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 252,\n                    columnNumber: 30\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: comment.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                children: [\"Posted on: \", new Date(comment.created_at).toLocaleString()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [currentUserProfile && currentUserProfile.username !== comment.user.username && /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleLikeComment(comment.id),\n                  children: comment.is_liked_by_user ? 'Unlike' : 'Like'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\" \", comment.likes_count, \" likes\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 25\n              }, this), currentUserProfile && currentUserProfile.username === comment.user.username && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleEditComment(comment),\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 267,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleDeleteComment(comment.id),\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 268,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 27\n              }, this)]\n            }, void 0, true)\n          }, comment.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 19\n          }, this);\n        }) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No comments yet.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleCommentSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: newComment,\n            onChange: e => setNewComment(e.target.value),\n            placeholder: \"Write a comment...\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Post Comment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please log in to view and post comments.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 211,\n    columnNumber: 5\n  }, this);\n}\n_s(MovieDetail, \"iKaEbEh+j8KNBz1ffREw2U/Wt1k=\", false, function () {\n  return [useParams];\n});\n_c = MovieDetail;\nexport default MovieDetail;\nvar _c;\n$RefreshReg$(_c, \"MovieDetail\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Link","api","jsxDEV","_jsxDEV","Fragment","_Fragment","DEFAULT_AVATAR","MovieDetail","_s","movie","setMovie","comments","setComments","newComment","setNewComment","error","setError","isLoading","setIsLoading","isLoggedIn","setIsLoggedIn","editingComment","setEditingComment","editedContent","setEditedContent","currentUserProfile","setCurrentUserProfile","id","userIdMapping","setUserIdMapping","token","localStorage","getItem","fetchMovieAndComments","movieResponse","get","data","commentsResponse","params","headers","console","log","profilesResponse","currentUserResponse","response","handleLike","post","content_type","object_id","prevMovie","likes_count","handleCommentSubmit","e","preventDefault","content","status","prevComments","Error","message","request","handleEditComment","comment","handleUpdateComment","put","map","c","handleDeleteComment","commentId","delete","filter","handleLikeComment","is_liked_by_user","is_liked","children","fileName","_jsxFileName","lineNumber","columnNumber","className","title","src","thumbnail","alt","year","genres","join","onClick","extract","length","correctProfileId","user","username","toLowerCase","value","onChange","target","to","avatar","onError","_comment$user","Date","created_at","toLocaleString","onSubmit","placeholder","required","type","_c","$RefreshReg$"],"sources":["/workspace/zaptalk_frontend/zaptalk_frontend/src/components/MovieDetail/MovieDetail.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport api from '../../api/axios';\n\nconst DEFAULT_AVATAR = 'https://res.cloudinary.com/dumvsoykz/image/upload/v1724754182/default_profile_yvdjcm.jpg';\n\nfunction MovieDetail() {\n  const [movie, setMovie] = useState(null);\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState('');\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [editingComment, setEditingComment] = useState(null);\n  const [editedContent, setEditedContent] = useState('');\n  const [currentUserProfile, setCurrentUserProfile] = useState(null);\n  const { id } = useParams();\n  const [userIdMapping, setUserIdMapping] = useState({});\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    setIsLoggedIn(!!token);\n\n    const fetchMovieAndComments = async () => {\n      setIsLoading(true);\n      try {\n        const movieResponse = await api.get(`movies/${id}/`);\n        setMovie(movieResponse.data);\n\n        if (token) {\n          const commentsResponse = await api.get('comments/', { \n            params: { movie: id },\n            headers: { 'Authorization': `Bearer ${token}` }\n          });\n          setComments(commentsResponse.data);\n          console.log('Comments:', commentsResponse.data);\n\n          const profilesResponse = await api.get('profiles/', {\n            headers: { 'Authorization': `Bearer ${token}` }\n          });\n          console.log('Profiles response:', profilesResponse.data);\n          setCurrentUserProfile(profilesResponse.data[0]);\n          \n          const currentUserResponse = await api.get('profiles/me/', {\n            headers: { 'Authorization': `Bearer ${token}` }\n          });\n          console.log('Current user profile:', currentUserResponse.data);\n          setCurrentUserProfile(currentUserResponse.data);\n        }\n      } catch (error) {\n        console.error('Error fetching movie details and comments:', error.response || error);\n        setError('Failed to fetch movie details');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchMovieAndComments();\n  }, [id]);\n\n  const handleLike = async () => {\n    if (!isLoggedIn) {\n      setError('Please log in to like the movie');\n      return;\n    }\n    try {\n      const response = await api.post(`likes/toggle_like/`, {\n        content_type: 'movie',\n        object_id: id\n      }, {\n        headers: { 'Authorization': `Bearer ${localStorage.getItem('token')}` }\n      });\n      setMovie(prevMovie => ({\n        ...prevMovie,\n        likes_count: response.data.likes_count\n      }));\n    } catch (error) {\n      console.error('Error liking movie:', error);\n      setError('Failed to like the movie. Please try again.');\n    }\n  };\n\n  const handleCommentSubmit = async (e) => {\n    e.preventDefault();\n    const token = localStorage.getItem('token');\n    if (!token) {\n      setError('You must be logged in to post a comment.');\n      return;\n    }\n    \n    try {\n      const response = await api.post('comments/', {\n        movie: id,\n        content: newComment\n      }, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      \n      if (response.status === 201) {\n        setComments(prevComments => [...prevComments, response.data]);\n        setNewComment('');\n        setError(null);\n      } else {\n        throw new Error('Unexpected response status');\n      }\n    } catch (error) {\n      console.error('Error posting comment:', error);\n      if (error.response) {\n        console.error('Response data:', error.response.data);\n        console.error('Response status:', error.response.status);\n        setError(`Failed to post comment: ${error.response.data.message || 'Unknown error'}`);\n      } else if (error.request) {\n        setError('No response received from server. Please try again.');\n      } else {\n        setError('Error setting up the request. Please try again.');\n      }\n    }\n  };\n  \n  const handleEditComment = (comment) => {\n    setEditingComment(comment);\n    setEditedContent(comment.content);\n  };\n\n  const handleUpdateComment = async () => {\n    try {\n      const response = await api.put(`comments/${editingComment.id}/`, {\n        content: editedContent\n      }, {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`,\n          'Content-Type': 'application/json'\n        }\n      });\n\n      if (response.status === 200) {\n        setComments(prevComments =>\n          prevComments.map(c =>\n            c.id === editingComment.id ? { ...c, content: editedContent } : c\n          )\n        );\n        setEditingComment(null);\n        setEditedContent('');\n        setError(null);\n      } else {\n        throw new Error('Unexpected response status');\n      }\n    } catch (error) {\n      console.error('Error updating comment:', error);\n      setError('Failed to update comment. Please try again.');\n    }\n  };\n\n  const handleDeleteComment = async (commentId) => {\n    try {\n      const response = await api.delete(`comments/${commentId}/`, {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n\n      if (response.status === 204) {\n        setComments(prevComments => prevComments.filter(c => c.id !== commentId));\n        setError(null);\n      } else {\n        throw new Error('Unexpected response status');\n      }\n    } catch (error) {\n      console.error('Error deleting comment:', error);\n      setError('Failed to delete comment. Please try again.');\n    }\n  };\n\n  const handleLikeComment = async (commentId) => {\n    try {\n      const response = await api.post('likes/toggle_like/', {\n        content_type: 'comment',\n        object_id: commentId\n      }, {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n\n      if (response.status === 200) {\n        setComments(prevComments =>\n          prevComments.map(comment =>\n            comment.id === commentId\n              ? {\n                  ...comment,\n                  likes_count: response.data.likes_count,\n                  is_liked_by_user: response.data.is_liked\n                }\n              : comment\n          )\n        );\n      }\n    } catch (error) {\n      console.error('Error toggling like:', error);\n      setError('Failed to like/unlike comment. Please try again.');\n    }\n  };\n\n  if (isLoading) return <div>Loading...</div>;\n  if (!movie) return <div>Movie not found</div>;\n\n  return (\n    <div className=\"movie-detail\">\n      <h1>{movie.title}</h1>\n      <img src={movie.thumbnail} alt={movie.title} />\n      <p>Year: {movie.year}</p>\n      <p>Genres: {movie.genres.join(', ')}</p>\n      <p>Likes: {movie.likes_count}</p>\n      <button onClick={handleLike}>Like</button>\n      <p>{movie.extract}</p>\n\n      <div className=\"comments-section\">\n      <h2>Comments</h2>\n        {isLoggedIn ? (\n          <>\n            {comments.length > 0 ? (\n              comments.map(comment => {\n                const correctProfileId = userIdMapping[comment.user.username.toLowerCase()] || comment.user.id;\n                return (\n                  <div key={comment.id} className=\"comment\">\n                    {editingComment && editingComment.id === comment.id ? (\n                      <div>\n                        <textarea\n                          value={editedContent}\n                          onChange={(e) => setEditedContent(e.target.value)}\n                        />\n                        <button onClick={handleUpdateComment}>Save</button>\n                        <button onClick={() => setEditingComment(null)}>Cancel</button>\n                      </div>\n                    ) : (\n                      <>\n                        <Link to={`/profile/${correctProfileId}`}>\n                          <img \n                            src={comment.user.avatar || DEFAULT_AVATAR}\n                            alt={`${comment.user.username}'s avatar`} \n                            className=\"w-12 h-12 rounded-full object-cover comment-avatar\"\n                            onError={(e) => {\n                              console.error(`Error loading avatar for ${comment.user?.username}:`, e);\n                              e.target.src = DEFAULT_AVATAR;\n                            }}\n                          />\n                        </Link>\n                        <Link to={`/profile/${correctProfileId}`}>\n                          <p><strong>{comment.user.username}</strong></p>\n                        </Link>  \n                        <p>{comment.content}</p>\n                        \n                        <small>Posted on: {new Date(comment.created_at).toLocaleString()}</small>\n                        <div>\n                          {currentUserProfile && currentUserProfile.username !== comment.user.username && (\n                            <button onClick={() => handleLikeComment(comment.id)}>\n                              {comment.is_liked_by_user ? 'Unlike' : 'Like'}\n                            </button>\n                          )}\n                          <span> {comment.likes_count} likes</span>\n                        </div>\n                        {currentUserProfile && currentUserProfile.username === comment.user.username && (\n                          <div>\n                            <button onClick={() => handleEditComment(comment)}>Edit</button>\n                            <button onClick={() => handleDeleteComment(comment.id)}>Delete</button>\n                          </div>\n                        )}\n                      </>\n                    )}\n                  </div>\n                );\n              })\n            ) : (\n              <p>No comments yet.</p>\n            )}\n\n            <form onSubmit={handleCommentSubmit}>\n              <textarea\n                value={newComment}\n                onChange={(e) => setNewComment(e.target.value)}\n                placeholder=\"Write a comment...\"\n                required\n              />\n              <button type=\"submit\">Post Comment</button>\n            </form>\n          </>\n        ) : (\n          <p>Please log in to view and post comments.</p>\n        )}\n      </div>\n      {error && <div className=\"error-message\">{error}</div>}\n    </div>\n  );\n}\n\nexport default MovieDetail;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}