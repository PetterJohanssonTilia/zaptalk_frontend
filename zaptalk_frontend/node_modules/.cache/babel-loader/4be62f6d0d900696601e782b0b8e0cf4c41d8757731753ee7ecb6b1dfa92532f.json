{"ast":null,"code":"var _jsxFileName = \"/workspace/zaptalk_frontend/zaptalk_frontend/src/components/MovieDetail/MovieDetail.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport api from '../../api/axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MovieDetail() {\n  _s();\n  const [movie, setMovie] = useState(null);\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState('');\n  const [error, setError] = useState(null);\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    const fetchMovieAndComments = async () => {\n      try {\n        const [movieResponse, commentsResponse] = await Promise.all([api.get(`movies/${id}/`), api.get(`movies/${id}/comments/`)]);\n        setMovie(movieResponse.data);\n        setComments(commentsResponse.data);\n      } catch (error) {\n        console.error('Error fetching movie details and comments:', error);\n        setError('Failed to fetch movie details and comments');\n      }\n    };\n    fetchMovieAndComments();\n  }, [id]);\n  const handleLike = async () => {\n    try {\n      const response = await api.post(`likes/toggle_like/`, {\n        content_type: 'movie',\n        object_id: id\n      });\n      setMovie(prevMovie => ({\n        ...prevMovie,\n        likes_count: response.data.likes_count\n      }));\n    } catch (error) {\n      console.error('Error liking movie:', error);\n      setError('Failed to like the movie. Please try again.');\n    }\n  };\n  const handleCommentSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await api.post(`movies/${id}/comments/`, {\n        content: newComment\n      });\n      setComments([...comments, response.data]);\n      setNewComment('');\n    } catch (error) {\n      console.error('Error posting comment:', error);\n      setError('Failed to post comment. Please try again.');\n    }\n  };\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 21\n  }, this);\n  if (!movie) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 22\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-detail\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: movie.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: movie.thumbnail,\n      alt: movie.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Year: \", movie.year]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Genres: \", movie.genres.join(', ')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Likes: \", movie.likes_count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLike,\n      children: \"Like\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: movie.extract\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: comment.user.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 16\n          }, this), \": \", comment.content]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: [\"Posted on: \", new Date(comment.created_at).toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)]\n      }, comment.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleCommentSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: newComment,\n          onChange: e => setNewComment(e.target.value),\n          placeholder: \"Write a comment...\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Post Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(MovieDetail, \"Y+jPzzl9KtBjjfpvGFEdlycDv9Y=\", false, function () {\n  return [useParams];\n});\n_c = MovieDetail;\nexport default MovieDetail;\nvar _c;\n$RefreshReg$(_c, \"MovieDetail\");","map":{"version":3,"names":["React","useState","useEffect","useParams","api","jsxDEV","_jsxDEV","MovieDetail","_s","movie","setMovie","comments","setComments","newComment","setNewComment","error","setError","id","fetchMovieAndComments","movieResponse","commentsResponse","Promise","all","get","data","console","handleLike","response","post","content_type","object_id","prevMovie","likes_count","handleCommentSubmit","e","preventDefault","content","children","fileName","_jsxFileName","lineNumber","columnNumber","className","title","src","thumbnail","alt","year","genres","join","onClick","extract","map","comment","user","username","Date","created_at","toLocaleString","onSubmit","value","onChange","target","placeholder","required","type","_c","$RefreshReg$"],"sources":["/workspace/zaptalk_frontend/zaptalk_frontend/src/components/MovieDetail/MovieDetail.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport api from '../../api/axios';\n\nfunction MovieDetail() {\n  const [movie, setMovie] = useState(null);\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState('');\n  const [error, setError] = useState(null);\n  const { id } = useParams();\n\n  useEffect(() => {\n    const fetchMovieAndComments = async () => {\n      try {\n        const [movieResponse, commentsResponse] = await Promise.all([\n          api.get(`movies/${id}/`),\n          api.get(`movies/${id}/comments/`)\n        ]);\n        setMovie(movieResponse.data);\n        setComments(commentsResponse.data);\n      } catch (error) {\n        console.error('Error fetching movie details and comments:', error);\n        setError('Failed to fetch movie details and comments');\n      }\n    };\n\n    fetchMovieAndComments();\n  }, [id]);\n\n  const handleLike = async () => {\n    try {\n      const response = await api.post(`likes/toggle_like/`, {\n        content_type: 'movie',\n        object_id: id\n      });\n      setMovie(prevMovie => ({\n        ...prevMovie,\n        likes_count: response.data.likes_count\n      }));\n    } catch (error) {\n      console.error('Error liking movie:', error);\n      setError('Failed to like the movie. Please try again.');\n    }\n  };\n\n  const handleCommentSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await api.post(`movies/${id}/comments/`, { content: newComment });\n      setComments([...comments, response.data]);\n      setNewComment('');\n    } catch (error) {\n      console.error('Error posting comment:', error);\n      setError('Failed to post comment. Please try again.');\n    }\n  };\n\n  if (error) return <div>Error: {error}</div>;\n  if (!movie) return <div>Loading...</div>;\n\n  return (\n    <div className=\"movie-detail\">\n      <h1>{movie.title}</h1>\n      <img src={movie.thumbnail} alt={movie.title} />\n      <p>Year: {movie.year}</p>\n      <p>Genres: {movie.genres.join(', ')}</p>\n      <p>Likes: {movie.likes_count}</p>\n      <button onClick={handleLike}>Like</button>\n      <p>{movie.extract}</p>\n\n      <div className=\"comments-section\">\n        <h2>Comments</h2>\n        {comments.map(comment => (\n          <div key={comment.id} className=\"comment\">\n            <p><strong>{comment.user.username}</strong>: {comment.content}</p>\n            <small>Posted on: {new Date(comment.created_at).toLocaleString()}</small>\n          </div>\n        ))}\n\n        <form onSubmit={handleCommentSubmit}>\n          <textarea\n            value={newComment}\n            onChange={(e) => setNewComment(e.target.value)}\n            placeholder=\"Write a comment...\"\n            required\n          />\n          <button type=\"submit\">Post Comment</button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default MovieDetail;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}