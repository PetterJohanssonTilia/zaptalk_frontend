{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport api from '../../api/axios';\nimport './MovieList.css';\nfunction MovieList() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [page, setPage] = useState(1);\n  const [loading, setLoading] = useState(false);\n  const [hasMore, setHasMore] = useState(true);\n  const [genres, setGenres] = useState([]);\n  const [selectedGenres, setSelectedGenres] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [sortBy, setSortBy] = useState('');\n  const [showFollowedLikes, setShowFollowedLikes] = useState(false);\n  const observer = useRef();\n  const lastMovieElementRef = useCallback(node => {\n    if (loading) return;\n    if (observer.current) observer.current.disconnect();\n    observer.current = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting && hasMore) {\n        setPage(prevPage => prevPage + 1);\n      }\n    });\n    if (node) observer.current.observe(node);\n  }, [loading, hasMore]);\n  const fetchMovies = useCallback(async () => {\n    setLoading(true);\n    try {\n      const response = await api.get('movies/', {\n        params: {\n          page: page,\n          genres: selectedGenres.join(','),\n          search: searchTerm,\n          sort: sortBy,\n          followed_likes: showFollowedLikes\n        },\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      const newMovies = response.data.results;\n      setMovies(prevMovies => page === 1 ? newMovies : [...prevMovies, ...newMovies]);\n      setHasMore(response.data.next !== null);\n    } catch (error) {\n      console.error('Error fetching movies:', error);\n    } finally {\n      setLoading(false);\n    }\n  }, [page, selectedGenres, searchTerm, sortBy, showFollowedLikes]);\n  useEffect(() => {\n    const fetchGenres = async () => {\n      try {\n        const response = await api.get('genres/');\n        setGenres(response.data);\n      } catch (error) {\n        console.error('Error fetching genres:', error);\n      }\n    };\n    fetchGenres();\n  }, []);\n  useEffect(() => {\n    setPage(1);\n    setMovies([]);\n    fetchMovies();\n  }, [selectedGenres, searchTerm, sortBy, showFollowedLikes, fetchMovies]);\n  useEffect(() => {\n    if (page > 1) {\n      fetchMovies();\n    }\n  }, [page, fetchMovies]);\n  const handleGenreChange = genre => {\n    setSelectedGenres(prev => prev.includes(genre) ? prev.filter(g => g !== genre) : [...prev, genre]);\n  };\n  const handleSearchChange = event => {\n    setSearchTerm(event.target.value);\n  };\n  const handleSortChange = event => {\n    setSortBy(event.target.value);\n  };\n  const toggleFollowedLikes = () => {\n    setShowFollowedLikes(prev => !prev);\n  };\n  const handleLike = async movieId => {\n    try {\n      const response = await api.post('likes/toggle_like/', {\n        content_type: 'movie',\n        object_id: movieId\n      }, {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      setMovies(prevMovies => prevMovies.map(movie => movie.id === movieId ? {\n        ...movie,\n        likes_count: response.data.likes_count,\n        is_liked_by_user: response.data.is_liked\n      } : movie));\n    } catch (error) {\n      console.error('Error toggling like for movie:', error);\n    }\n  };\n\n  // ... rest of your component (return statement) remains the same\n}\n_s(MovieList, \"j3zKNWZC7anuLMqgUs7J5VVeeMM=\");\n_c = MovieList;\nexport default MovieList;\nvar _c;\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","Link","api","MovieList","_s","movies","setMovies","page","setPage","loading","setLoading","hasMore","setHasMore","genres","setGenres","selectedGenres","setSelectedGenres","searchTerm","setSearchTerm","sortBy","setSortBy","showFollowedLikes","setShowFollowedLikes","observer","lastMovieElementRef","node","current","disconnect","IntersectionObserver","entries","isIntersecting","prevPage","observe","fetchMovies","response","get","params","join","search","sort","followed_likes","headers","localStorage","getItem","newMovies","data","results","prevMovies","next","error","console","fetchGenres","handleGenreChange","genre","prev","includes","filter","g","handleSearchChange","event","target","value","handleSortChange","toggleFollowedLikes","handleLike","movieId","post","content_type","object_id","map","movie","id","likes_count","is_liked_by_user","is_liked","_c","$RefreshReg$"],"sources":["/workspace/zaptalk_frontend/zaptalk_frontend/src/components/MovieList/MovieList.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport api from '../../api/axios';\nimport './MovieList.css';\n\nfunction MovieList() {\n  const [movies, setMovies] = useState([]);\n  const [page, setPage] = useState(1);\n  const [loading, setLoading] = useState(false);\n  const [hasMore, setHasMore] = useState(true);\n  const [genres, setGenres] = useState([]);\n  const [selectedGenres, setSelectedGenres] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [sortBy, setSortBy] = useState('');\n  const [showFollowedLikes, setShowFollowedLikes] = useState(false);\n  const observer = useRef();\n\n  const lastMovieElementRef = useCallback(node => {\n    if (loading) return;\n    if (observer.current) observer.current.disconnect();\n    observer.current = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting && hasMore) {\n        setPage(prevPage => prevPage + 1);\n      }\n    });\n    if (node) observer.current.observe(node);\n  }, [loading, hasMore]);\n\n  const fetchMovies = useCallback(async () => {\n    setLoading(true);\n    try {\n      const response = await api.get('movies/', { \n        params: { \n          page: page,\n          genres: selectedGenres.join(','),\n          search: searchTerm,\n          sort: sortBy,\n          followed_likes: showFollowedLikes\n        },\n        headers: { 'Authorization': `Bearer ${localStorage.getItem('token')}` }\n      });\n      const newMovies = response.data.results;\n      setMovies(prevMovies => page === 1 ? newMovies : [...prevMovies, ...newMovies]);\n      setHasMore(response.data.next !== null);\n    } catch (error) {\n      console.error('Error fetching movies:', error);\n    } finally {\n      setLoading(false);\n    }\n  }, [page, selectedGenres, searchTerm, sortBy, showFollowedLikes]);\n\n  useEffect(() => {\n    const fetchGenres = async () => {\n      try {\n        const response = await api.get('genres/');\n        setGenres(response.data);\n      } catch (error) {\n        console.error('Error fetching genres:', error);\n      }\n    };\n    fetchGenres();\n  }, []);\n\n  useEffect(() => {\n    setPage(1);\n    setMovies([]);\n    fetchMovies();\n  }, [selectedGenres, searchTerm, sortBy, showFollowedLikes, fetchMovies]);\n\n  useEffect(() => {\n    if (page > 1) {\n      fetchMovies();\n    }\n  }, [page, fetchMovies]);\n\n  const handleGenreChange = (genre) => {\n    setSelectedGenres(prev => \n      prev.includes(genre) ? prev.filter(g => g !== genre) : [...prev, genre]\n    );\n  };\n\n  const handleSearchChange = (event) => {\n    setSearchTerm(event.target.value);\n  };\n\n  const handleSortChange = (event) => {\n    setSortBy(event.target.value);\n  };\n\n  const toggleFollowedLikes = () => {\n    setShowFollowedLikes(prev => !prev);\n  };\n\n  const handleLike = async (movieId) => {\n    try {\n      const response = await api.post('likes/toggle_like/', {\n        content_type: 'movie',\n        object_id: movieId\n      }, {\n        headers: { 'Authorization': `Bearer ${localStorage.getItem('token')}` }\n      });\n\n      setMovies(prevMovies =>\n        prevMovies.map(movie =>\n          movie.id === movieId\n            ? { \n                ...movie, \n                likes_count: response.data.likes_count,\n                is_liked_by_user: response.data.is_liked\n              }\n            : movie\n        )\n      );\n    } catch (error) {\n      console.error('Error toggling like for movie:', error);\n    }\n  };\n\n  // ... rest of your component (return statement) remains the same\n}\n\nexport default MovieList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}