{"ast":null,"code":"var _jsxFileName = \"/workspace/zaptalk_frontend/zaptalk_frontend/src/components/MovieDetail/MovieDetail.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport api from '../../api/axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction MovieDetail() {\n  _s();\n  const [movie, setMovie] = useState(null);\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState('');\n  const [movieError, setMovieError] = useState(null);\n  const [commentsError, setCommentsError] = useState(null);\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    const fetchMovie = async () => {\n      try {\n        const response = await api.get(`movies/${id}/`);\n        setMovie(response.data);\n      } catch (error) {\n        console.error('Error fetching movie details:', error);\n        setMovieError('Failed to fetch movie details');\n      }\n    };\n    const fetchComments = async () => {\n      try {\n        const response = await api.get(`movies/${id}/comments/`);\n        setComments(response.data);\n      } catch (error) {\n        console.error('Error fetching comments:', error);\n        setCommentsError('Failed to fetch comments');\n      }\n    };\n    fetchMovie();\n    fetchComments();\n  }, [id]);\n  const handleLike = async () => {\n    try {\n      const response = await api.post(`likes/toggle_like/`, {\n        content_type: 'movie',\n        object_id: id\n      });\n      setMovie(prevMovie => ({\n        ...prevMovie,\n        likes_count: response.data.likes_count\n      }));\n    } catch (error) {\n      console.error('Error liking movie:', error);\n      // You might want to show a temporary error message here\n    }\n  };\n  const handleCommentSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await api.post(`movies/${id}/comments/`, {\n        content: newComment\n      });\n      setComments(prevComments => [...prevComments, response.data]);\n      setNewComment('');\n    } catch (error) {\n      console.error('Error posting comment:', error);\n      // You might want to show a temporary error message here\n    }\n  };\n  if (movieError) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", movieError]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 26\n  }, this);\n  if (!movie) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 22\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-detail\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: movie.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: movie.thumbnail,\n      alt: movie.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Year: \", movie.year]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Genres: \", movie.genres.join(', ')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Likes: \", movie.likes_count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLike,\n      children: \"Like\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: movie.extract\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), commentsError ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-500\",\n        children: \"Unable to load comments at this time.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: comment.user.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 20\n            }, this), \": \", comment.content]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: [\"Posted on: \", new Date(comment.created_at).toLocaleString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 17\n          }, this)]\n        }, comment.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleCommentSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: newComment,\n            onChange: e => setNewComment(e.target.value),\n            placeholder: \"Write a comment...\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Post Comment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(MovieDetail, \"963JzVvtEx4fKhpXhzvnEc/e8xo=\", false, function () {\n  return [useParams];\n});\n_c = MovieDetail;\nexport default MovieDetail;\nvar _c;\n$RefreshReg$(_c, \"MovieDetail\");","map":{"version":3,"names":["React","useState","useEffect","useParams","api","jsxDEV","_jsxDEV","Fragment","_Fragment","MovieDetail","_s","movie","setMovie","comments","setComments","newComment","setNewComment","movieError","setMovieError","commentsError","setCommentsError","id","fetchMovie","response","get","data","error","console","fetchComments","handleLike","post","content_type","object_id","prevMovie","likes_count","handleCommentSubmit","e","preventDefault","content","prevComments","children","fileName","_jsxFileName","lineNumber","columnNumber","className","title","src","thumbnail","alt","year","genres","join","onClick","extract","map","comment","user","username","Date","created_at","toLocaleString","onSubmit","value","onChange","target","placeholder","required","type","_c","$RefreshReg$"],"sources":["/workspace/zaptalk_frontend/zaptalk_frontend/src/components/MovieDetail/MovieDetail.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport api from '../../api/axios';\n\nfunction MovieDetail() {\n  const [movie, setMovie] = useState(null);\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState('');\n  const [movieError, setMovieError] = useState(null);\n  const [commentsError, setCommentsError] = useState(null);\n  const { id } = useParams();\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      try {\n        const response = await api.get(`movies/${id}/`);\n        setMovie(response.data);\n      } catch (error) {\n        console.error('Error fetching movie details:', error);\n        setMovieError('Failed to fetch movie details');\n      }\n    };\n\n    const fetchComments = async () => {\n      try {\n        const response = await api.get(`movies/${id}/comments/`);\n        setComments(response.data);\n      } catch (error) {\n        console.error('Error fetching comments:', error);\n        setCommentsError('Failed to fetch comments');\n      }\n    };\n\n    fetchMovie();\n    fetchComments();\n  }, [id]);\n\n  const handleLike = async () => {\n    try {\n      const response = await api.post(`likes/toggle_like/`, {\n        content_type: 'movie',\n        object_id: id\n      });\n      setMovie(prevMovie => ({\n        ...prevMovie,\n        likes_count: response.data.likes_count\n      }));\n    } catch (error) {\n      console.error('Error liking movie:', error);\n      // You might want to show a temporary error message here\n    }\n  };\n\n  const handleCommentSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await api.post(`movies/${id}/comments/`, { content: newComment });\n      setComments(prevComments => [...prevComments, response.data]);\n      setNewComment('');\n    } catch (error) {\n      console.error('Error posting comment:', error);\n      // You might want to show a temporary error message here\n    }\n  };\n\n  if (movieError) return <div>Error: {movieError}</div>;\n  if (!movie) return <div>Loading...</div>;\n\n  return (\n    <div className=\"movie-detail\">\n      <h1>{movie.title}</h1>\n      <img src={movie.thumbnail} alt={movie.title} />\n      <p>Year: {movie.year}</p>\n      <p>Genres: {movie.genres.join(', ')}</p>\n      <p>Likes: {movie.likes_count}</p>\n      <button onClick={handleLike}>Like</button>\n      <p>{movie.extract}</p>\n\n      <div className=\"comments-section\">\n        <h2>Comments</h2>\n        {commentsError ? (\n          <p className=\"text-gray-500\">Unable to load comments at this time.</p>\n        ) : (\n          <>\n            {comments.map(comment => (\n              <div key={comment.id} className=\"comment\">\n                <p><strong>{comment.user.username}</strong>: {comment.content}</p>\n                <small>Posted on: {new Date(comment.created_at).toLocaleString()}</small>\n              </div>\n            ))}\n            <form onSubmit={handleCommentSubmit}>\n              <textarea\n                value={newComment}\n                onChange={(e) => setNewComment(e.target.value)}\n                placeholder=\"Write a comment...\"\n                required\n              />\n              <button type=\"submit\">Post Comment</button>\n            </form>\n          </>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default MovieDetail;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}